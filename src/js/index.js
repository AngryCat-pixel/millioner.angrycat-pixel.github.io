const questionNode = document.querySelector(".question");
const answersNode = document.querySelector(".answer");
const timerNode = document.querySelector("#timer_inp");

const finishButton = document.querySelector(".helps_game-end");
finishButton.addEventListener("click", () => {
  if (!finishButton.classList.contains("disabled")) {
    alert(
      `–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${
        document.querySelector(".active").previousSibling.textContent
      } –Ω–∏—á–µ–≥–æ üôÇ`
    );
    location.reload();
  }
});

let gameData = [
  {
    question: "–ö–∞–∫–æ–π –∑–Ω–∞–∫ –≤–æ—Å—Ç–æ—á–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ —Å–ª–µ–¥—É–µ—Ç –∑–∞ –∑–Ω–∞–∫–æ–º –î—Ä–∞–∫–æ–Ω–∞?",
    answers: [
      {
        answer: "–ö–æ—Ç –ö—Ä–æ–ª–∏–∫",
        correct: false,
      },
      {
        answer: "–ó–º–µ—è",
        correct: true,
      },
      {
        answer: "–°–æ–±–∞–∫–∞",
        correct: false,
      },
      {
        answer: "–ö—Ä—ã—Å–∞",
        correct: false,
      },
    ],
  },
  {
    question: "–í –∫–∞–∫—É—é –æ–¥–µ–∂–¥—É –ø—Ä–∏–Ω—è—Ç–æ –ø–ª–∞–∫–∞—Ç—å, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å —Å–æ—á—É–≤—Å—Ç–≤–∏–µ?",
    answers: [
      {
        answer: "–í —Ä—É–±–∞—à–∫—É",
        correct: false,
      },
      {
        answer: "–í –∂–∏–ª–µ—Ç–∫—É",
        correct: true,
      },
      {
        answer: "–í –ø–ª–∞—Ç—å–µ",
        correct: false,
      },
      {
        answer: "–í –∫—É—Ç—Ä–∫—É",
        correct: false,
      },
    ],
  },
  {
    question: "–ö–∞–∫–æ–µ –∏–∑ —ç—Ç–∏—Ö —É–∫—Ä–∞—à–µ–Ω–∏–π –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –Ω–∞ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–π —ë–ª–∫–µ?",
    answers: [
      {
        answer: "–ü–µ—Ä—Å—Ç–µ–Ω—å",
        correct: false,
      },
      {
        answer: "–°–µ—Ä—å–≥–∏",
        correct: false,
      },
      {
        answer: "–ë—É—Å—ã",
        correct: true,
      },
      {
        answer: "–ë—Ä–∞—Å–ª–µ—Ç",
        correct: false,
      },
    ],
  },
  {
    question: "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–º–µ—à–µ–Ω–∏–∏ —Å–∏–Ω–µ–≥–æ –∏ –∫—Ä–∞—Å–Ω–æ–≥–æ?",
    answers: [
      {
        answer: "–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π",
        correct: false,
      },
      {
        answer: "–§–∏–æ–ª–µ—Ç–æ–≤—ã–π",
        correct: true,
      },
      {
        answer: "–ó–µ–ª–µ–Ω—ã–π",
        correct: false,
      },
      {
        answer: "–ì–æ–ª—É–±–æ–π",
        correct: false,
      },
    ],
  },
  {
    question: "–í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –æ–±–∏—Ç–∞—é—Ç –∫–µ–Ω–≥—É—Ä—É?",
    answers: [
      {
        answer: "–ì–∞–∏—Ç–∏",
        correct: false,
      },
      {
        answer: "–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è",
        correct: false,
      },
      {
        answer: "–†–æ—Å—Å–∏—è",
        correct: false,
      },
      {
        answer: "–ê–≤—Å—Ç—Ä–∞–ª–∏—è",
        correct: true,
      },
    ],
  },
  {
    question: "–í —Å–æ—Å—Ç–∞–≤ –ª—é–±–æ–≥–æ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ –≤—Ö–æ–¥–∏—Ç‚Ä¶",
    answers: [
      {
        answer: "–ö–∏—Å–ª–æ—Ä–æ–¥",
        correct: false,
      },
      {
        answer: "–£–≥–ª–µ—Ä–æ–¥",
        correct: true,
      },
      {
        answer: "–í–æ–¥–æ—Ä–æ–¥",
        correct: false,
      },
      {
        answer: "–ê–∑–æ—Ç",
        correct: false,
      },
    ],
  },
  {
    question: "–†–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç—å—é –∫–∞–∫–æ–≥–æ –º–∏–Ω–µ—Ä–∞–ª–∞ —è–≤–ª—è–µ—Ç—Å—è –≥–æ—Ä–Ω—ã–π —Ö—Ä—É—Å—Ç–∞–ª—å?",
    answers: [
      {
        answer: "–û–ø–∞–ª",
        correct: false,
      },
      {
        answer: "–ö–≤–∞—Ä—Ü–∞",
        correct: true,
      },
      {
        answer: "–ì—Ä–∞—Ñ–∏—Ç",
        correct: false,
      },
      {
        answer: "–ê–ª–º–∞–∑",
        correct: false,
      },
    ],
  },
  {
    question: "–ß—Ç–æ –∫—Ä–∏—á–∞—Ç –±–æ–ª–µ–ª—å—â–∏–∫–∏ –Ω–∞ —Ö–æ–∫–∫–µ–π–Ω–æ–º –º–∞—Ç—á–µ?",
    answers: [
      {
        answer: "–ì–∞–π–∫—É!",
        correct: false,
      },
      {
        answer: "–í–ø–µ—Ä–µ–¥!",
        correct: false,
      },
      {
        answer: "–®–∞–π–±—É!",
        correct: true,
      },
      {
        answer: "–†–∞–∫–µ—Ç—É!",
        correct: false,
      },
    ],
  },
  {
    question: "–ö—Ç–æ –∏–∑–æ–±—Ä–µ–ª –≥—Ä–æ–º–æ–æ—Ç–≤–æ–¥?",
    answers: [
      {
        answer: "–§—Ä–∞–Ω–∫–ª–∏–Ω",
        correct: true,
      },
      {
        answer: "–†—É–∑–≤–µ–ª—å—Ç",
        correct: false,
      },
      {
        answer: "–í–∞—à–∏–Ω–≥—Ç–æ–Ω",
        correct: false,
      },
      {
        answer: "–õ–∏–Ω–∫–æ–ª—å–Ω",
        correct: false,
      },
    ],
  },
  {
    question: "–ö–∞–∫–∏–µ —Å–µ–º—å–∏, –ø–æ –º–Ω–µ–Ω–∏—é –õ. –ù. –¢–æ–ª—Å—Ç–æ–≥–æ, –ø–æ—Ö–æ–∂–∏ –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞?",
    answers: [
      {
        answer: "–î–≤–æ—Ä–æ–≤—ã–µ",
        correct: false,
      },
      {
        answer: "–ì—Ä—É—Å—Ç—ã–µ",
        correct: false,
      },
      {
        answer: "–°—á–∞—Å—Ç–ª–∏–≤—ã–µ",
        correct: true,
      },
      {
        answer: "–ò–∑–≤–µ—Å—Ç–Ω—ã–µ",
        correct: false,
      },
    ],
  },
  {
    question: "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞ Microsoft?",
    answers: [
      {
        answer: "–ù—å—é-–ô–æ—Ä–∫",
        correct: false,
      },
      {
        answer: "–†–µ–¥–º–æ–Ω–¥",
        correct: true,
      },
      {
        answer: "–ù–æ–≤—ã–π –û—Ä–ª–µ–∞–Ω",
        correct: false,
      },
      {
        answer: "–°–∏—ç—Ç–ª",
        correct: false,
      },
    ],
  },
  {
    question:
      "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏, –∫–æ–≥–¥–∞ —Å–æ–ª–Ω—Ü–µ –≤ —Å–µ–≤–µ—Ä–Ω—ã—Ö —à–∏—Ä–æ—Ç–∞—Ö –Ω–µ –æ–ø—É—Å–∫–∞–µ—Ç—Å—è –∑–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç?",
    answers: [
      {
        answer: "–í–µ–ª–∏–∫–∏–π –¥–µ–Ω—å",
        correct: false,
      },
      {
        answer: "–°–æ–ª–Ω—Ü–µ—Å—Ç–æ—è–Ω–∏–µ",
        correct: false,
      },
      {
        answer: "–°–æ–ª–Ω–µ—á–Ω–æ–µ –∑–∞—Ç–º–µ–Ω–∏–µ",
        correct: false,
      },
      {
        answer: "–ü–æ–ª—è—Ä–Ω—ã–π –¥–µ–Ω—å",
        correct: true,
      },
    ],
  },
  {
    question: "–†–∏—á–∞—Ä–¥ –õ—å–≤–∏–Ω–æ–µ –°–µ—Ä–¥—Ü–µ –±—ã–ª –ø–ª–µ–Ω–µ–Ω –≤–æ –≤—Ä–µ–º—è",
    answers: [
      {
        answer: "–ö—Ä–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Ö–æ–¥–∞",
        correct: true,
      },
      {
        answer: "–°—Ç–æ–ª–µ—Ç–Ω–µ–π –≤–æ–π–Ω—ã",
        correct: false,
      },
      {
        answer: "–í–æ–π–Ω—ã –∞–ª–æ–π –∏ –±–µ–ª–æ–π —Ä–æ–∑—ã",
        correct: false,
      },
      {
        answer: "–í–æ–π–Ω—ã –∑–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å",
        correct: false,
      },
    ],
  },
  {
    question:
      "–ö–∞–∫–æ–µ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ —è–≤–ª–µ–Ω–∏–µ –∂–∏—Ç–µ–ª–∏ –ó–µ–º–ª–∏ –º–æ–≥—É—Ç –Ω–∞–±–ª—é–¥–∞—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –≤ 76 –ª–µ—Ç?",
    answers: [
      {
        answer: "–ó–≤–µ–∑–¥–æ–ø–∞–¥",
        correct: false,
      },
      {
        answer: "–ê—Å—Ç–µ—Ä–æ–∏–¥",
        correct: false,
      },
      {
        answer: "–ö–æ–º–µ—Ç–∞ –ì–∞–ª–ª–µ—è",
        correct: true,
      },
      {
        answer: "–°–∞–º–æ–ª–µ—Ç",
        correct: false,
      },
    ],
  },
  {
    question: "–ö—Ç–æ —Ç–∞–∫–æ–π ¬´–º–æ–ª–æ—Ç–æ–≥–ª–∞–≤¬ª?",
    answers: [
      {
        answer: "–†—ã–±–∞",
        correct: false,
      },
      {
        answer: "–ü—Ç–∏—Ü–∞",
        correct: true,
      },
      {
        answer: "–ó–º–µ—è",
        correct: false,
      },
      {
        answer: "–ù–∞—Å–µ–∫–æ–º–æ–µ",
        correct: false,
      },
    ],
  },
];
let sum = 0;

game();
async function game() {
  let win = true;
  for (let index = 0; index < gameData.length; index++) {
    if (index !== 0) {
      let currentLevel = document.querySelector(".active");
      currentLevel.classList.remove("active");
      currentLevel.nextElementSibling.classList.add("active");
      if (currentLevel.classList.contains("no-fear")) {
        sum = Number(currentLevel.textContent.replace(" ", ""));
      }
    }
    if (index === 1) {
      finishButton.classList.remove("disabled");
    }

    const currentGameData = gameData[index];
    questionNode.textContent = currentGameData.question;
    for (let index = 0; index < currentGameData.answers.length; index++) {
      let answerNode = answersNode.children[index];
      if (answerNode.classList.contains("helping")) {
        answerNode.classList.remove("helping");
      }

      const answerData = currentGameData.answers[index];
      answerNode.textContent = answerData.answer;
      answerNode.setAttribute("correct", answerData.correct);
    }

    // –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏ –∂–¥–µ–º –æ—Ç–≤–µ—Ç
    let checkState = await waitAnswer();

    if (checkState === false) {
      win = false;
      break;
    }
  }

  if (win === true) {
    alert(
      `–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${answersNode.lastChild.textContent} –Ω–∏—á–µ–≥–æ üôÇ`
    );
  } else {
    alert(`–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${sum} –Ω–∏—á–µ–≥–æ üôÇ`);
  }
  location.reload();
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∫–æ–≥–¥–∞ –±—ã–ª –≤—ã–±—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–ª–∏ false –∫–æ–≥–¥–∞ –æ—Ç–≤–µ—Ç –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.
 * @returns {boolean}
 */
function waitAnswer() {
  return new Promise((resolve, reject) => {
    let timeOut = 60;
    timerNode.textContent = timeOut;
    let timerId = setInterval(() => {
      timeOut--;
      timerNode.textContent = timeOut;
      if (timeOut === 0) {
        clearInterval(timerId);
        return resolve(false);
      }
    }, 1000);

    for (let index = 0; index < 4; index++) {
      const buttonNode = answersNode.children[index];
      buttonNode.addEventListener("click", (event) => {
        if (event.target.getAttribute("correct") === "true") {
          clearInterval(timerId);
          return resolve(true);
        } else {
          clearInterval(timerId);
          return resolve(false);
        }
      });
    }
  });
}

document.querySelector(".helps_call").addEventListener("click", friendCall);
let usedFriendCall = false;
function friendCall() {
  if (usedFriendCall) {
    return true;
  }
  usedFriendCall = true;

  let friendTrue = Math.round(Math.random());
  let randomField = Math.floor(Math.random() * 3);
  if (friendTrue === 1) {
    answersNode.querySelector('[correct="true"]').classList.add("helping");
  } else {
    answersNode
      .querySelectorAll('[correct="false"]')
      [randomField].classList.add("helping");
  }
}

document.querySelector(".helps_fifty").addEventListener("click", fifty);
let usedfifty = false;
function fifty() {
  if (usedfifty) {
    return true;
  }
  usedfifty = true;

  let randomField = Math.floor(Math.random() * 3);
  answersNode.querySelector('[correct="true"]').classList.add("helping");
  answersNode
    .querySelectorAll('[correct="false"]')
    [randomField].classList.add("helping");
}
